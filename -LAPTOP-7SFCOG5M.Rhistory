alpha = .7,stat='identity') +
labs(x="METHOD", y="Avg.Robbery") +
labs(title="G1.Method of Robbery./M") + scale_x_discrete(limits=c("GUN","KNIFE","OTHERS")) + geom_text(aes(label=signif(y)),vjust = 1.5)
#Pre
temp <- count(Robbery_pre,METHOD, sort=FALSE)
#total_Avg
temp[1,3] = as.integer(temp[1,2] / 14)
temp[2,3] = as.integer(temp[2,2] / 14)
temp[3,3] = as.integer(temp[3,2] / 14)
x <-  c("GUN","KNIFE","OTHERS")
y  <-  c(temp[1,3],temp[2,3],temp[3,3])
temp_2 <- data.frame(x,y)
#barplot(y, names.arg = x)
plot_shift_pre <- ggplot(data=temp_2, aes(x,y)) +
geom_bar(col="darkblue",
fill="lightblue",
alpha = .7,stat='identity') +
labs(x="METHOD", y="Avg.Robbery") +
labs(title="G1_1.Method of Robbery(Pre)") + scale_x_discrete(limits=c("GUN","KNIFE","OTHERS")) + geom_text(aes(label=signif(y)),vjust = 1.5)
#Lock
temp <- count(Robbery_lock,METHOD, sort=FALSE)
#total_Avg
temp[1,3] = as.integer(temp[1,2] / 17)
temp[2,3] = as.integer(temp[2,2] / 17)
temp[3,3] = as.integer(temp[3,2] / 17)
x <-  c("GUN","KNIFE","OTHERS")
y  <-  c(temp[1,3],temp[2,3],temp[3,3])
temp_2 <- data.frame(x,y)
#barplot(y, names.arg = x)
plot_shift_lock <- ggplot(data=temp_2, aes(x,y)) +
geom_bar(col="darkblue",
fill="lightblue",
alpha = .7,stat='identity') +
labs(x="METHOD", y="Avg.Robbery") +
labs(title="G1_2.Method of Robbery(Lock)") + scale_x_discrete(limits=c("GUN","KNIFE","OTHERS")) + geom_text(aes(label=signif(y)),vjust = 1.5)
#Post
temp <- count(Robbery_post,METHOD, sort=FALSE)
#total_Avg
temp[1,3] = as.integer(temp[1,2] / 17)
temp[2,3] = as.integer(temp[2,2] / 17)
temp[3,3] = as.integer(temp[3,2] / 17)
x <-  c("GUN","KNIFE","OTHERS")
y  <-  c(temp[1,3],temp[2,3],temp[3,3])
temp_2 <- data.frame(x,y)
#barplot(y, names.arg = x)
plot_shift_post <- ggplot(data=temp_2, aes(x,y)) +
geom_bar(col="darkblue",
fill="lightblue",
alpha = .7,stat='identity') +
labs(x="METHOD", y="Avg.Robbery") +
labs(title="G1_3.Method of Robbery(Post)") + scale_x_discrete(limits=c("GUN","KNIFE","OTHERS")) + geom_text(aes(label=signif(y)),vjust = 1.5)
grid.arrange(plot_shift, plot_shift_pre, plot_shift_lock, plot_shift_post,
ncol=2, nrow=2)
temp <- count(Robbery,DISTRICT, sort=FALSE)
#total_Avg
temp[1,3] = as.integer(temp[1,2] / 48) #1
temp[2,3] = as.integer(temp[2,2] / 48) #
temp[3,3] = as.integer(temp[3,2] / 48) #
temp[4,3] = as.integer(temp[4,2] / 48) #
temp[5,3] = as.integer(temp[5,2] / 48) #
temp[6,3] = as.integer(temp[6,2] / 48) #
temp[7,3] = as.integer(temp[7,2] / 48) #7
#temp[7,3] = as.integer(temp[7,2] / 48) #NA
x <-  c("1","2","3","4","5","6","7")
y  <-  c(temp[1,3],temp[2,3],temp[3,3],temp[4,3],temp[5,3],temp[6,3],temp[7,3])
temp_2 <- data.frame(x,y)
#barplot(y, names.arg = x)
plot_shift <- ggplot(data=temp_2, aes(x,y)) +
geom_bar(col="darkblue",
fill="lightblue",
alpha = .7,stat='identity') +
labs(x="DISTRICT", y="Avg.Robbery") +
labs(title="H1.Robbery BY DISTRICT./M") + scale_x_discrete(limits=c("1","2","3","4","5","6","7")) + geom_text(aes(label=signif(y)),vjust = 1.5)
#Pre
temp <- count(Robbery_pre,DISTRICT, sort=FALSE)
#total_Avg
temp[1,3] = as.integer(temp[1,2] / 14) #SUN
temp[2,3] = as.integer(temp[2,2] / 14) #
temp[3,3] = as.integer(temp[3,2] / 14) #
temp[4,3] = as.integer(temp[4,2] / 14) #
temp[5,3] = as.integer(temp[5,2] / 14) #
temp[6,3] = as.integer(temp[6,2] / 14) #
temp[7,3] = as.integer(temp[7,2] / 14) #SAT
x <-  c("1","2","3","4","5","6","7")
y  <-  c(temp[1,3],temp[2,3],temp[3,3],temp[4,3],temp[5,3],temp[6,3],temp[7,3])
temp_2 <- data.frame(x,y)
#barplot(y, names.arg = x)
plot_shift_pre <- ggplot(data=temp_2, aes(x,y)) +
geom_bar(col="darkblue",
fill="lightblue",
alpha = .7,stat='identity') +
labs(x="DISTRICT", y="Avg.Robbery") +
labs(title="H1_1.Robbery BY DISTRICT(Pre)") + scale_x_discrete(limits=c("1","2","3","4","5","6","7")) + geom_text(aes(label=signif(y)),vjust = 1.5)
#Lock
temp <- count(Robbery_lock,DISTRICT, sort=FALSE)
#total_Avg
temp[1,3] = as.integer(temp[1,2] / 17) #SUN
temp[2,3] = as.integer(temp[2,2] / 17) #
temp[3,3] = as.integer(temp[3,2] / 17) #
temp[4,3] = as.integer(temp[4,2] / 17) #
temp[5,3] = as.integer(temp[5,2] / 17) #
temp[6,3] = as.integer(temp[6,2] / 17) #
temp[7,3] = as.integer(temp[7,2] / 17) #SAT
x <-  c("1","2","3","4","5","6","7")
y  <-  c(temp[1,3],temp[2,3],temp[3,3],temp[4,3],temp[5,3],temp[6,3],temp[7,3])
temp_2 <- data.frame(x,y)
#barplot(y, names.arg = x)
plot_shift_lock <- ggplot(data=temp_2, aes(x,y)) +
geom_bar(col="darkblue",
fill="lightblue",
alpha = .7,stat='identity') +
labs(x="DISTRICT", y="Avg.Robbery") +
labs(title="H1_2.Robbery BY DISTRICT(Lock)") + scale_x_discrete(limits=c("1","2","3","4","5","6","7")) + geom_text(aes(label=signif(y)),vjust = 1.5)
#Post
temp <- count(Robbery_post,DISTRICT, sort=FALSE)
#total_Avg
temp[1,3] = as.integer(temp[1,2] / 17) #SUN
temp[2,3] = as.integer(temp[2,2] / 17) #
temp[3,3] = as.integer(temp[3,2] / 17) #
temp[4,3] = as.integer(temp[4,2] / 17) #
temp[5,3] = as.integer(temp[5,2] / 17) #
temp[6,3] = as.integer(temp[6,2] / 17) #
temp[7,3] = as.integer(temp[7,2] / 17) #SAT
x <-  c("1","2","3","4","5","6","7")
y  <-  c(temp[1,3],temp[2,3],temp[3,3],temp[4,3],temp[5,3],temp[6,3],temp[7,3])
temp_2 <- data.frame(x,y)
#barplot(y, names.arg = x)
plot_shift_post <- ggplot(data=temp_2, aes(x,y)) +
geom_bar(col="darkblue",
fill="lightblue",
alpha = .7,stat='identity') +
labs(x="DISTRICT", y="Avg.Robbery") +
labs(title="H1_3.Robbery BY DISTRICT(Post)") + scale_x_discrete(limits=c("1","2","3","4","5","6","7")) + geom_text(aes(label=signif(y)),vjust = 1.5)
grid.arrange(plot_shift, plot_shift_pre, plot_shift_lock, plot_shift_post,
ncol=2, nrow=2)
boxplot_PSA <- ggplot(Robbery, aes(y=PSA, x=Period_cat, fill=Period_cat)) +
geom_boxplot() +
geom_boxplot( colour=c("#ff0000","#11cc11","#0000ff"), outlier.shape=8,
outlier.colour="lightblue", outlier.size=4) +  labs(title="I_1. Box Plot of Robbery by Location(PSA)", x="Period", y = "Location (PSA) of Robbery")
boxplot_PSA
boxplot_Clearance <- ggplot(Robbery, aes(y=Clearance_rate, x=Period_cat, fill=Period_cat)) +
geom_boxplot() +
geom_boxplot( colour=c("#ff0000","#11cc11","#0000ff"), outlier.shape=8,
outlier.colour="lightblue", outlier.size=4) +  labs(title="I_2. Box Plot of Robbery Clearance rate", x="Period", y = "Clearance_rate(Minute)")
boxplot_Clearance
Robbery_clean = outlierKD2(Robbery, OBJECTID, rm = TRUE, boxplt = TRUE, qqplt = TRUE)
Robbery_clean = outlierKD2(Robbery, PSA, rm = TRUE, boxplt = TRUE, qqplt = TRUE)
Robbery_clean = outlierKD2(Robbery, Clearance_rate, rm = TRUE, boxplt = TRUE, qqplt = TRUE)
#str(Robbery_clean)
prop.1 <- with(Robbery_clean, table(Period_cat, DISTRICT)) %>%
prop.table(margin = 1)
xkabledply(prop.1*100, title = "Robbery propotion by District(%)")
#contable = table(Robbery_clean$Period_cat, Robbery_clean$DISTRICT)
#make a summary table
Robbery_avg_clr <-  Robbery_clean %>% group_by(Period_cat,DISTRICT) %>%
summarise(avg_Clearance_rate = mean(Clearance_rate, na.rm = TRUE),.groups = 'drop')
arrange(Robbery_avg_clr, Period_cat,DISTRICT)
Robbery_avg_clr <- data.frame(Robbery_avg_clr)
plot_DISTRICT_add <- ggplot(Robbery_avg_clr, aes(DISTRICT, avg_Clearance_rate, colour = Period_cat)) + geom_line() + labs(x="district", y="Avg.clearance(minute)") +
labs(title="Avg.clearance by district") + scale_x_discrete(limits=c("1","2","3","4","5","6","7")) + geom_point()
plot_DISTRICT_add
#ggplot(data=Robbery_clean)+
#  geom_point(mapping = aes(x=DISTRICT, y=METHOD, color=Period_cat))+
#  ggtitle("Scatterplot of DISTRICT vs Clearance_rate for pendamic phrases")+
#  labs(x="DISTRICT", y = "Clearance_rate(minute)")
prop.1 <- with(Robbery_clean, table(Period_cat, METHOD)) %>%
prop.table(margin = 1)
xkabledply(prop.1*100, title = "Robbery propotion by METHOD(%)")
#make a summary table
Robbery_avg_clr <-  Robbery_clean %>% group_by(METHOD,Period_cat) %>%
summarise(avg_Clearance_rate = mean(Clearance_rate, na.rm = TRUE),.groups = 'drop')
arrange(Robbery_avg_clr, METHOD, Period_cat)
Robbery_avg_clr <- data.frame(Robbery_avg_clr)
plot_METHOD_add <- ggplot(Robbery_avg_clr, aes(Period_cat, avg_Clearance_rate, group = METHOD, ,colour = METHOD)) + geom_line() + labs(x="METHOD", y="Avg.clearance(minute)") + geom_point() + labs(title="Avg.clearance by METHOD")
plot_METHOD_add
plot_METHOD_add <- ggplot(Robbery_avg_clr, aes(METHOD, avg_Clearance_rate, colour = Period_cat)) + geom_line() + labs(x="METHOD", y="Avg.clearance(minute)") +
labs(title="Avg.clearance by METHOD") + geom_point()
plot_METHOD_add
plot_METHOD_add <- ggplot(Robbery_avg_clr, aes(METHOD, avg_Clearance_rate, colour = Period_cat)) + geom_line() + labs(x="METHOD", y="Avg.clearance(minute)") +
labs(title="Avg.clearance by METHOD") + scale_x_discrete(limits=c("GUN","KNIFE","OTHERS")) + geom_point()
plot_METHOD_add
plot_METHOD_add <- ggplot(Robbery_avg_clr, aes(Period_cat, avg_Clearance_rate, group = METHOD, ,colour = METHOD)) + geom_line() + labs(x="METHOD", y="Avg.clearance(minute)") + geom_point() + labs(title="Avg.clearance by METHOD")
plot_METHOD_add
plot_METHOD_add <- ggplot(Robbery_avg_clr, aes(METHOD, avg_Clearance_rate, group = Period_cat, ,colour = Period_cat)) + geom_line() + labs(x="METHOD", y="Avg.clearance(minute)") + geom_point() + labs(title="Avg.clearance by METHOD")
plot_METHOD_add
plot_DISTRICT_add <- ggplot(Robbery_avg_clr, aes(Period_cat, avg_Clearance_rate, group = DISTRICT, ,colour = DISTRICT)) + geom_line() + labs(x="Period_cat", y="Avg.clearance(minute)") + scale_x_discrete(limits=c("1","2","3","4","5","6","7")) + geom_point() + labs(title="Avg.clearance by METHOD")
plot_DISTRICT_add
#make a summary table
Robbery_avg_clr <-  Robbery_clean %>% group_by(Period_cat,DISTRICT) %>%
summarise(avg_Clearance_rate = mean(Clearance_rate, na.rm = TRUE),.groups = 'drop')
arrange(Robbery_avg_clr, Period_cat,DISTRICT)
Robbery_avg_clr <- data.frame(Robbery_avg_clr)
plot_DISTRICT_add <- ggplot(Robbery_avg_clr, aes(DISTRICT, avg_Clearance_rate, colour = Period_cat)) + geom_line() + labs(x="district", y="Avg.clearance(minute)") +
labs(title="Avg.clearance by district") + scale_x_discrete(limits=c("1","2","3","4","5","6","7")) + geom_point()
plot_DISTRICT_add
#ggplot(data=Robbery_clean)+
#  geom_point(mapping = aes(x=DISTRICT, y=METHOD, color=Period_cat))+
#  ggtitle("Scatterplot of DISTRICT vs Clearance_rate for pendamic phrases")+
#  labs(x="DISTRICT", y = "Clearance_rate(minute)")
plot_DISTRICT_add <- ggplot(Robbery_avg_clr, aes(Period_cat, avg_Clearance_rate, group = DISTRICT, ,colour = DISTRICT)) + geom_line() + labs(x="Period_cat", y="Avg.clearance(minute)") + scale_x_discrete(limits=c("1","2","3","4","5","6","7")) + geom_point() + labs(title="Avg.clearance by METHOD")
plot_DISTRICT_add
plot_DISTRICT_add <- ggplot(Robbery_avg_clr, aes(Period_cat, avg_Clearance_rate, group = DISTRICT, ,colour = DISTRICT)) + geom_line() + labs(x="Period_cat", y="Avg.clearance(minute)") + geom_point() + labs(title="Avg.clearance by METHOD")
plot_DISTRICT_add
plot_DISTRICT_add <- ggplot(Robbery_avg_clr, aes(DISTRICT, avg_Clearance_rate, colour = Period_cat)) + geom_line() + labs(x="district", y="Avg.clearance(minute)") +
labs(title="Avg.clearance by district") + scale_x_discrete(limits=c("1","2","3","4","5","6","7")) + geom_point()
plot_DISTRICT_add
#ggplot(data=Robbery_clean)+
#  geom_point(mapping = aes(x=DISTRICT, y=METHOD, color=Period_cat))+
#  ggtitle("Scatterplot of DISTRICT vs Clearance_rate for pendamic phrases")+
#  labs(x="DISTRICT", y = "Clearance_rate(minute)")
#make a summary table
Robbery_avg_clr <-  Robbery_clean %>% group_by(METHOD,Period_cat) %>%
summarise(avg_Clearance_rate = mean(Clearance_rate, na.rm = TRUE),.groups = 'drop')
arrange(Robbery_avg_clr, METHOD, Period_cat)
Robbery_avg_clr <- data.frame(Robbery_avg_clr)
plot_METHOD_add <- ggplot(Robbery_avg_clr, aes(METHOD, avg_Clearance_rate, colour = Period_cat)) + geom_line() + labs(x="METHOD", y="Avg.clearance(minute)") +
labs(title="Avg.clearance by METHOD") + scale_x_discrete(limits=c("GUN","KNIFE","OTHERS")) + geom_point()
plot_METHOD_add
plot_METHOD_add <- ggplot(Robbery_avg_clr, aes(METHOD, avg_Clearance_rate, group = Period_cat, ,colour = Period_cat)) + geom_line() + labs(x="METHOD", y="Avg.clearance(minute)") + geom_point() + labs(title="Avg.clearance by METHOD")
plot_METHOD_add
plot_METHOD_add <- ggplot(Robbery_avg_clr, aes(METHOD, avg_Clearance_rate, group = Period_cat, ,colour = Period_cat)) + geom_line() + labs(x="METHOD", y="Avg.clearance(minute)") + geom_point() + labs(title="Avg.clearance by METHOD")
plot_METHOD_add
prop.1 <- with(Robbery_clean, table(Period_cat, METHOD)) %>%
prop.table(margin = 1)
xkabledply(prop.1*100, title = "Robbery propotion by METHOD(%)")
prop.1 <- with(Robbery_clean, table(Period_cat, SHIFT)) %>%
prop.table(margin = 1)
xkabledply(prop.1*100, title = "Robbery propotion by SHIFT(%)")
#make a summary table
Robbery_avg_clr <-  Robbery_clean %>% group_by(SHIFT,Period_cat) %>%
summarise(avg_Clearance_rate = mean(Clearance_rate, na.rm = TRUE),.groups = 'drop')
arrange(Robbery_avg_clr, SHIFT, Period_cat)
Robbery_avg_clr <- data.frame(Robbery_avg_clr)
plot_SHIFT_add <- ggplot(Robbery_avg_clr, aes(Period_cat, avg_Clearance_rate, group = SHIFT, ,colour = SHIFT)) + geom_line() + labs(x="SHIFT", y="Avg.clearance(minute)") + geom_point() + labs(title="Avg.clearance by SHIFT")
plot_SHIFT_add
plot_SHIFT_add <- ggplot(Robbery_avg_clr, aes(SHIFT, avg_Clearance_rate, group = Period_cat, ,colour = Period_cat)) + geom_line() + labs(x="SHIFT", y="Avg.clearance(minute)") + geom_point() + labs(title="Avg.clearance by SHIFT")
plot_SHIFT_add
plot_METHOD_add <- ggplot(Robbery_avg_clr, aes(Period_cat, avg_Clearance_rate, group = METHOD, ,colour = METHOD)) + geom_line() + labs(x="Phase", y="Avg.clearance(minute)") + geom_point() + labs(title="Avg.clearance by METHOD")
plot_METHOD_add
#make a summary table
Robbery_avg_clr <-  Robbery_clean %>% group_by(METHOD,Period_cat) %>%
summarise(avg_Clearance_rate = mean(Clearance_rate, na.rm = TRUE),.groups = 'drop')
arrange(Robbery_avg_clr, METHOD, Period_cat)
Robbery_avg_clr <- data.frame(Robbery_avg_clr)
plot_METHOD_add <- ggplot(Robbery_avg_clr, aes(Period_cat, avg_Clearance_rate, group = METHOD, ,colour = METHOD)) + geom_line() + labs(x="Phase", y="Avg.clearance(minute)") + geom_point() + labs(title="Avg.clearance by METHOD")
plot_METHOD_add
plot_SHIFT_add <- ggplot(Robbery_avg_clr, aes(Period_cat, avg_Clearance_rate, group = SHIFT, ,colour = SHIFT)) + geom_line() + labs(x="Phase", y="Avg.clearance(minute)") + geom_point() + labs(title="Avg.clearance by SHIFT")
plot_SHIFT_add
#make a summary table
Robbery_avg_clr <-  Robbery_clean %>% group_by(SHIFT,Period_cat) %>%
summarise(avg_Clearance_rate = mean(Clearance_rate, na.rm = TRUE),.groups = 'drop')
arrange(Robbery_avg_clr, SHIFT, Period_cat)
Robbery_avg_clr <- data.frame(Robbery_avg_clr)
plot_SHIFT_add <- ggplot(Robbery_avg_clr, aes(Period_cat, avg_Clearance_rate, group = SHIFT, ,colour = SHIFT)) + geom_line() + labs(x="Phase", y="Avg.clearance(minute)") + geom_point() + labs(title="Avg.clearance by SHIFT")
plot_SHIFT_add
## (Temporary) Organize Datasets before moving on to the Hypothesis test
### Wrap-up final datasets Save (Begin next step by loading these data)
# 1. Main datasets: 5 (2 total, 3 subsets)
#  + original: Robbery, pre, lock, post
#  + outlier excluded data: Robbery_clean
# 2. Summary datasets: 5
#  + (Sum of frequency, origin from Robbery_clean)
#    Robbery_date_sum, Robbery_month_sum, Robbery_Date_cat_sum
#  + (Average of clearance_rate)
#    Robbery_district_avg_clr (origin from both Robbery),
#   Robbery_clean_district_avg_clr (origin from Robbery_clean)
# This block will run/execute but just skip showing result
temp <- select(Robbery_clean,REPORT_DAT_2,Period_cat)
Robbery_date_sum <- count(temp,REPORT_DAT_2,Period_cat, sort=FALSE)
#str(Robbery_date_sum)
arrange(Robbery_date_sum, REPORT_DAT_2)  #Ascending
#head(Robbery_date_sum,5)
#*The first 4 rows of the first summary dataset (Robbery_date_sum) are:*
xkabledply(Robbery_date_sum[1:4,], title = "First Four Rows of Dataframe: `Robbery_date_sum`")
##########
temp <- select(Robbery_clean,Month_3,Period_cat)
Robbery_month_sum <- count(temp,Month_3,Period_cat, sort=FALSE)
#str(Robbery_date_sum)
arrange(Robbery_month_sum, Month_3)  #Ascending
#head(Robbery_date_sum,10)
#*The first 4 rows of the second summary dataset (Robbery_month_sum) are:*
xkabledply(Robbery_month_sum[1:4,], title = "First Four Rows of Dataframe: `Robbery_month_sum`")
##########
temp <- select(Robbery_clean,Date_cat,Period_cat)
Robbery_Date_cat_sum <- count(temp,Date_cat,Period_cat, sort=FALSE)
#str(Robbery_date_sum)
arrange(Robbery_Date_cat_sum, Date_cat,Period_cat)  #Ascending
#head(Robbery_date_sum,10)
#*The third summary dataset (Robbery_Date_cat_sum) are:*
xkabledply(Robbery_Date_cat_sum, title = "Dataframe: `Robbery_Date_cat_sum`")
Robbery_district_avg_clr <-  Robbery %>% group_by(Period_cat, DISTRICT) %>%
summarise(avg_Clearance_rate = mean(Clearance_rate, na.rm = TRUE),.groups = 'drop')
arrange(Robbery_district_avg_clr, Period_cat,DISTRICT)
Robbery_district_avg_clr <- data.frame(Robbery_district_avg_clr)
#*The first 4 rows of the fourth summary dataset (Robbery_district_avg_clr) are:*
#  + Robbery_district_avg_clr: origin for **Robbery**
xkabledply(Robbery_district_avg_clr[1:4,], title = "Dataframe: `Robbery_district_avg_clr`")
####################
Robbery_clean_district_avg_clr <-  Robbery_clean %>% group_by(Period_cat, DISTRICT) %>%
summarise(avg_Clearance_rate = mean(Clearance_rate, na.rm = TRUE),.groups = 'drop')
arrange(Robbery_clean_district_avg_clr, Period_cat,DISTRICT)
Robbery_clean_district_avg_clr <- data.frame(Robbery_clean_district_avg_clr)
#*The first 4 rows of the fifth summary dataset (Robbery_clean_district_avg_clr) are:*
#  + Robbery_clean_district_avg_clr: origin for **Robbery_clean (outlier excluded)**
xkabledply(Robbery_clean_district_avg_clr[1:4,], title = "Dataframe: `Robbery_district_avg_clr`")
#Save current data
#readr::write_rds(Robbery, "Robbery_230303.Rds")
#readr::write_rds(Robbery_pre, "Robbery_pre_230303.Rds")
#readr::write_rds(Robbery_lock, "Robbery_lock_230303.Rds")
#readr::write_rds(Robbery_post, "Robbery_post_230303.Rds")
#readr::write_rds(Robbery_clean, "Robbery_clean_230303.Rds")
#Use this code to load
#Robbery <-
#  readr::read_rds("Robbery_230303.Rds")
#Robbery_clean <-
#  readr::read_rds("Robbery_clean_230303.Rds")
#Load subset
#Robbery_pre <-
#  readr::read_rds("Robbery_pre_230303.Rds")
#Robbery_lock <-
#  readr::read_rds("Robbery_lock_230303.Rds")
#Robbery_post <-
#  readr::read_rds("Robbery_post_230303.Rds")
#Save current data
readr::write_rds(Robbery, "Robbery_230303.Rds")
readr::write_rds(Robbery_pre, "Robbery_pre_230303.Rds")
readr::write_rds(Robbery_lock, "Robbery_lock_230303.Rds")
readr::write_rds(Robbery_post, "Robbery_post_230303.Rds")
readr::write_rds(Robbery_clean, "Robbery_clean_230303.Rds")
#Save current data
readr::write_rds(Robbery_date_sum, "Robbery_date_sum_230303.Rds")
readr::write_rds(Robbery_month_sum, "Robbery_month_sum_230303.Rds")
readr::write_rds(Robbery_Date_cat_sum, "Robbery_Date_cat_sum_230303.Rds")
readr::write_rds(Robbery_district_avg_clr, "Robbery_district_avg_clr_230303.Rds")
readr::write_rds(Robbery_clean_district_avg_clr, "Robbery_clean_district_avg_clr_230303.Rds")
attach(Robbery)
Robbery$Period_cat_num[Period_cat == 'Pre'] <- 1
Robbery$Period_cat_num[Period_cat == 'Lock'] <- 2
Robbery$Period_cat_num[Period_cat  == 'Post'] <- 3
detach(Robbery)
count(Robbery,Period_cat_num)
readr::write_rds(Robbery, "Robbery_230303.Rds")
readr::write_rds(Robbery_pre, "Robbery_pre_230303.Rds")
readr::write_rds(Robbery_lock, "Robbery_lock_230303.Rds")
readr::write_rds(Robbery_post, "Robbery_post_230303.Rds")
readr::write_rds(Robbery_clean, "Robbery_clean_230303.Rds")
## (Temporary) Organize Datasets before moving on to the Hypothesis test
### Wrap-up final datasets Save (Begin next step by loading these data)
# 1. Main datasets: 5 (2 total, 3 subsets)
#  + original: Robbery, pre, lock, post
#  + outlier excluded data: Robbery_clean
# 2. Summary datasets: 5
#  + (Sum of frequency, origin from Robbery_clean)
#    Robbery_date_sum, Robbery_month_sum, Robbery_Date_cat_sum
#  + (Average of clearance_rate)
#    Robbery_district_avg_clr (origin from both Robbery),
#   Robbery_clean_district_avg_clr (origin from Robbery_clean)
### (Mar 4) Creating variable for hypothesis test (ANd save again)
#  + Period_cat(pre,lock,post) > Period_cat_num(1,2,3)
attach(Robbery)
Robbery$Period_cat_num[Period_cat == 'Pre'] <- 1
Robbery$Period_cat_num[Period_cat == 'Lock'] <- 2
Robbery$Period_cat_num[Period_cat  == 'Post'] <- 3
detach(Robbery)
temp <- select(Robbery_clean,REPORT_DAT_2,Period_cat)
Robbery_date_sum <- count(temp,REPORT_DAT_2,Period_cat, sort=FALSE)
#str(Robbery_date_sum)
arrange(Robbery_date_sum, REPORT_DAT_2)  #Ascending
#head(Robbery_date_sum,5)
#*The first 4 rows of the first summary dataset (Robbery_date_sum) are:*
xkabledply(Robbery_date_sum[1:4,], title = "First Four Rows of Dataframe: `Robbery_date_sum`")
##########
temp <- select(Robbery_clean,Month_3,Period_cat)
Robbery_month_sum <- count(temp,Month_3,Period_cat, sort=FALSE)
#str(Robbery_date_sum)
arrange(Robbery_month_sum, Month_3)  #Ascending
#head(Robbery_date_sum,10)
#*The first 4 rows of the second summary dataset (Robbery_month_sum) are:*
xkabledply(Robbery_month_sum[1:4,], title = "First Four Rows of Dataframe: `Robbery_month_sum`")
##########
temp <- select(Robbery_clean,Date_cat,Period_cat)
Robbery_Date_cat_sum <- count(temp,Date_cat,Period_cat, sort=FALSE)
#str(Robbery_date_sum)
arrange(Robbery_Date_cat_sum, Date_cat,Period_cat)  #Ascending
#head(Robbery_date_sum,10)
#*The third summary dataset (Robbery_Date_cat_sum) are:*
xkabledply(Robbery_Date_cat_sum, title = "Dataframe: `Robbery_Date_cat_sum`")
Robbery_district_avg_clr <-  Robbery %>% group_by(Period_cat, DISTRICT) %>%
summarise(avg_Clearance_rate = mean(Clearance_rate, na.rm = TRUE),.groups = 'drop')
arrange(Robbery_district_avg_clr, Period_cat,DISTRICT)
Robbery_district_avg_clr <- data.frame(Robbery_district_avg_clr)
#*The first 4 rows of the fourth summary dataset (Robbery_district_avg_clr) are:*
#  + Robbery_district_avg_clr: origin for **Robbery**
xkabledply(Robbery_district_avg_clr[1:4,], title = "Dataframe: `Robbery_district_avg_clr`")
####################
Robbery_clean_district_avg_clr <-  Robbery_clean %>% group_by(Period_cat, DISTRICT) %>%
summarise(avg_Clearance_rate = mean(Clearance_rate, na.rm = TRUE),.groups = 'drop')
arrange(Robbery_clean_district_avg_clr, Period_cat,DISTRICT)
Robbery_clean_district_avg_clr <- data.frame(Robbery_clean_district_avg_clr)
#*The first 4 rows of the fifth summary dataset (Robbery_clean_district_avg_clr) are:*
#  + Robbery_clean_district_avg_clr: origin for **Robbery_clean (outlier excluded)**
xkabledply(Robbery_clean_district_avg_clr[1:4,], title = "Dataframe: `Robbery_district_avg_clr`")
#Save current data
#readr::write_rds(Robbery, "Robbery_230303.Rds")
#readr::write_rds(Robbery_pre, "Robbery_pre_230303.Rds")
#readr::write_rds(Robbery_lock, "Robbery_lock_230303.Rds")
#readr::write_rds(Robbery_post, "Robbery_post_230303.Rds")
#readr::write_rds(Robbery_clean, "Robbery_clean_230303.Rds")
#readr::write_rds(Robbery_date_sum, "Robbery_date_sum_230303.Rds")
#readr::write_rds(Robbery_month_sum, "Robbery_month_sum_230303.Rds")
#readr::write_rds(Robbery_Date_cat_sum, "Robbery_Date_cat_sum_230303.Rds")
#readr::write_rds(Robbery_district_avg_clr, "Robbery_district_avg_clr_230303.Rds")
#readr::write_rds(Robbery_clean_district_avg_clr, "Robbery_clean_district_avg_clr_230303.Rds")
#Use this code to load
#Robbery <-
#  readr::read_rds("Robbery_230303.Rds")
#Robbery_clean <-
#  readr::read_rds("Robbery_clean_230303.Rds")
#Load subset
#Robbery_pre <-
#  readr::read_rds("Robbery_pre_230303.Rds")
#Robbery_lock <-
#  readr::read_rds("Robbery_lock_230303.Rds")
#Robbery_post <-
#  readr::read_rds("Robbery_post_230303.Rds")
#Robbery_date_sum <-
#  readr::read_rds("Robbery_date_sum_230303.Rds")
#Robbery_month_sum <-
#  readr::read_rds("Robbery_month_sum_230303.Rds")
#Robbery_Date_cat_sum <-
#  readr::read_rds("Robbery_Date_cat_sum_230303.Rds")
#Robbery_district_avg_clr <-
#  readr::read_rds("Robbery_district_avg_clr_230303.Rds")
#Robbery_clean_district_avg_clr <-
#  readr::read_rds("Robbery_clean_district_avg_clr_230303.Rds")
#Save current data
readr::write_rds(Robbery, "Robbery_230303.Rds")
readr::write_rds(Robbery_pre, "Robbery_pre_230303.Rds")
readr::write_rds(Robbery_lock, "Robbery_lock_230303.Rds")
readr::write_rds(Robbery_post, "Robbery_post_230303.Rds")
readr::write_rds(Robbery_clean, "Robbery_clean_230303.Rds")
readr::write_rds(Robbery_date_sum, "Robbery_date_sum_230303.Rds")
readr::write_rds(Robbery_month_sum, "Robbery_month_sum_230303.Rds")
readr::write_rds(Robbery_Date_cat_sum, "Robbery_Date_cat_sum_230303.Rds")
readr::write_rds(Robbery_district_avg_clr, "Robbery_district_avg_clr_230303.Rds")
readr::write_rds(Robbery_clean_district_avg_clr, "Robbery_clean_district_avg_clr_230303.Rds")
anova_dayily_rob_exc = aov(n~Period_cat, data = Robbery_date_sum_exc)
anova_summary_exc = summary(anova_dayily_rob_exc)
xkabledply(anova_summary_exc)
Robbery_month_sum_exl = outlierKD2(Robbery_month_sum, n, rm = TRUE)
anova_monthly_rob = aov(n~Period_cat, data = Robbery_month_sum_exl)
anova_summary = summary(anova_monthly_rob)
xkabledply(anova_monthly_rob)
Robbery_avg_clr <-  Robbery_clean %>% group_by(Period_cat, REPORT_DAT_2) %>%
summarise(avg_Clearance_rate = mean(Clearance_rate, na.rm = TRUE),.groups = 'drop')
arrange(Robbery_avg_clr, Period_cat,REPORT_DAT_2)
Robbery_avg_clr <- data.frame(Robbery_avg_clr)
anova_daily_rob = aov(avg_Clearance_rate~Period_cat, data = Robbery_avg_clr)
anova_summary = summary(anova_daily_rob)
anova_summary
#xkabledply(anova_daily_rob)
table1 = table(Robbery$Period_cat, Robbery$Season)
xkabledply(table1, title="Contingency table 1'")
chitest1 = chisq.test(table1)
chitest1
table2 = table(Robbery$Period_cat, Robbery$Day_cat_2)
xkabledply(table2, title="Contingency table 2'")
chitest2 = chisq.test(table2)
chitest2
table3 = table(Robbery$Period_cat, Robbery$METHOD)
xkabledply(table3, title="Contingency table3'")
chitest3 = chisq.test(table3)
chitest3
table4 = table(Robbery$Period_cat, Robbery$Month)
xkabledply(table4, title="Contingency table 4'")
chitest4 = chisq.test(table4)
chitest4
table5 = table(Robbery$Period_cat, Robbery$DISTRICT)
xkabledply(table5, title="Contingency table 5'")
chitest5 = chisq.test(table5)
chitest5
#make a summary table
Robbery_avg_clr <-  Robbery_clean %>% group_by(Period_cat) %>%
summarise(avg_Clearance_rate = mean(Clearance_rate, na.rm = TRUE),.groups = 'drop')
arrange(Robbery_avg_clr, Period_cat)
Robbery_avg_clr <- data.frame(Robbery_avg_clr)
xkabledply(Robbery_avg_clr, title = "Avg.Robbery clearance by phase")
#make a summary table
Robbery_avg_clr <-  Robbery_clean %>% group_by(Period_cat) %>%
summarise(avg_Clearance_rate = mean(Clearance_rate, na.rm = TRUE),.groups = 'drop')
arrange(Robbery_avg_clr, Period_cat)
Robbery_avg_clr <- data.frame(Robbery_avg_clr)
Robbery_date_sum_exc = outlierKD2(Robbery_date_sum, n, rm = TRUE)
anova_dayily_rob_exc = aov(n~Period_cat, data = Robbery_date_sum_exc)
anova_summary_exc = summary(anova_dayily_rob_exc)
xkabledply(anova_summary_exc)
Robbery_date_sum_exc = outlierKD2(Robbery_date_sum, n, rm = TRUE)
anova_dayily_rob_exc = aov(n~Period_cat, data = Robbery_date_sum_exc)
anova_summary_exc = summary(anova_dayily_rob_exc)
xkabledply(anova_summary_exc)
xkabledply(anova_summary_exc)
anova_daily_rob = aov(avg_Clearance_rate~Period_cat, data = Robbery_avg_clr)
anova_summary = summary(anova_daily_rob)
xkabledply(anova_daily_rob)
table1 = table(Robbery$Period_cat, Robbery$Season)
xkabledply(table1, title="Contingency table 1")
chitest1 = chisq.test(table1)
xkabledply(chitest1)
table1 = table(Robbery$Period_cat, Robbery$Season)
xkabledply(table1, title="Contingency table 1")
chitest1 = chisq.test(table1)
chitest1
